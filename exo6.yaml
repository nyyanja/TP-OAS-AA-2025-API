# exo6.yml - API avancée avec modèles complexes et sous-ressources
openapi: 3.0.3
info:
  title: API Profils Utilisateurs
  description: API complète pour la gestion des profils utilisateurs avec mise à jour ciblée
  version: 1.0.0

components:
  schemas:
    # Informations personnelles
    PersonalInfo:
      type: object
      properties:
        first_name:
          type: string
          example: "Jean"
        last_name:
          type: string
          example: "Dupont"
        birthdate:
          type: string
          format: date
          example: "1990-05-15"
        email:
          type: string
          format: email
          example: "jean.dupont@example.com"
      required:
        - first_name
        - last_name
        - birthdate
        - email

    # Adresse
    Address:
      type: object
      properties:
        address_street:
          type: string
          example: "123 Rue de la Paix"
        address_city:
          type: string
          example: "Antananarivo"
        address_country:
          type: string
          example: "Madagascar"
        address_postal_code:
          type: string
          example: "101"
      required:
        - address_street
        - address_city
        - address_country
        - address_postal_code

    # Préférences
    Preferences:
      type: object
      properties:
        needs_newsletter:
          type: boolean
          example: true
        language:
          type: string
          enum: [mg, fr, eng]
          example: "fr"
      required:
        - needs_newsletter
        - language

    # Profil utilisateur complet (avec ID)
    UserProfile:
      allOf:
        - type: object
          properties:
            identifier:
              type: string
              example: "user_123456"
          required:
            - identifier
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'

    # Profil pour la création (sans ID)
    CreateUserProfile:
      allOf:
        - $ref: '#/components/schemas/PersonalInfo'
        - $ref: '#/components/schemas/Address'
        - $ref: '#/components/schemas/Preferences'

  parameters:
    UserIdParam:
      name: id
      in: path
      description: Identifiant unique de l'utilisateur
      required: true
      schema:
        type: string
      example: "user_123456"

paths:
  /users:
    post:
      summary: Créer de nouveaux utilisateurs
      description: Crée une liste d'utilisateurs (les identifiants sont générés automatiquement)
      requestBody:
        description: Liste des profils utilisateurs à créer
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateUserProfile'
            examples:
              new_users:
                summary: Nouveaux utilisateurs
                value:
                  - first_name: "Jean"
                    last_name: "Dupont"
                    birthdate: "1990-05-15"
                    email: "jean.dupont@example.com"
                    address_street: "123 Rue de la Paix"
                    address_city: "Antananarivo"
                    address_country: "Madagascar"
                    address_postal_code: "101"
                    needs_newsletter: true
                    language: "fr"
                  - first_name: "Marie"
                    last_name: "Martin"
                    birthdate: "1985-12-03"
                    email: "marie.martin@example.com"
                    address_street: "456 Avenue de l'Indépendance"
                    address_city: "Antananarivo"
                    address_country: "Madagascar"
                    address_postal_code: "101"
                    needs_newsletter: false
                    language: "mg"
      responses:
        '201':
          description: Utilisateurs créés avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
              examples:
                created_users:
                  summary: Utilisateurs créés
                  value:
                    - identifier: "user_123456"
                      first_name: "Jean"
                      last_name: "Dupont"
                      birthdate: "1990-05-15"
                      email: "jean.dupont@example.com"
                      address_street: "123 Rue de la Paix"
                      address_city: "Antananarivo"
                      address_country: "Madagascar"
                      address_postal_code: "101"
                      needs_newsletter: true
                      language: "fr"

  /users/{id}:
    get:
      summary: Récupérer un utilisateur
      description: Retourne toutes les informations d'un utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      responses:
        '200':
          description: Utilisateur trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: Utilisateur non trouvé
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User not found"

  /users/{id}/personalInfo:
    put:
      summary: Mettre à jour les informations personnelles
      description: Met à jour uniquement les informations personnelles de l'utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        description: Nouvelles informations personnelles
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalInfo'
            examples:
              update_personal_info:
                summary: Mise à jour informations personnelles
                value:
                  first_name: "Jean-Pierre"
                  last_name: "Dupont"
                  birthdate: "1990-05-15"
                  email: "jeanpierre.dupont@example.com"
      responses:
        '200':
          description: Informations personnelles mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/{id}/address:
    put:
      summary: Mettre à jour l'adresse
      description: Met à jour uniquement l'adresse de l'utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        description: Nouvelle adresse
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
            examples:
              update_address:
                summary: Mise à jour adresse
                value:
                  address_street: "789 Boulevard de l'Université"
                  address_city: "Fianarantsoa"
                  address_country: "Madagascar"
                  address_postal_code: "301"
      responses:
        '200':
          description: Adresse mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'

  /users/{id}/preferences:
    put:
      summary: Mettre à jour les préférences
      description: Met à jour uniquement les préférences de l'utilisateur
      parameters:
        - $ref: '#/components/parameters/UserIdParam'
      requestBody:
        description: Nouvelles préférences
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Preferences'
            examples:
              update_preferences:
                summary: Mise à jour préférences
                value:
                  needs_newsletter: false
                  language: "eng"
      responses:
        '200':
          description: Préférences mises à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'